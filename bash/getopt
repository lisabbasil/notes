#!/usr/bin/env bash

# Use advanced mode of getopt (standard by now), not getopts
# The reason why people bitch about getopt, is that the ancient version was
# pretty buggy, not very powerful and is not portable; getopts on the other hand
# does not support long options and mixing of flags with positional arguments

# Example usage of getopt:

flag=false
value=999

usage(){
    echo "Parse command options."
    echo
    echo "Usage: $(basename $0) [option]"
    echo "where [option] can be"
    echo "  -h               Show this help"
    echo "  -f               A flag"
    echo "  -v               A value (default: ${value})"
}

run(){
    echo "Example how to use getopt in a bash script."
    if [ "${flag}" == "true" ]; then
        echo "Flag is set."
    else
        echo "Flag is not set."
    fi
    echo "Value is ${value}."
    echo "Bye."
}

parseOptions(){

    OPT=$(getopt \
        --options hfv: \
        --name "$0" \
        -- "$@"
    )

    if [ $? -ne 0 ]; then
        usage
        exit 1
    fi

    eval set -- "${OPT}"

    while true; do
        case "${1}" in
            -h) usage; exit 0;;
            -f) flag=true; shift 1;;
            -v) value="${2}"; shift 2;;
            --) shift; break;;
        esac
    done

    run "$@"
}

parseOptions "$@"
